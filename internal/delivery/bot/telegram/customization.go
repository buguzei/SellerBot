package telegram

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"strconv"
)

// here is text for bot's messages

const (
	startText        = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –±—Ä–µ–Ω–¥–∞ \"udobno\". –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å —Å–µ–±–µ –Ω–∞—à–∏ —Ç–æ–≤–∞—Ä—ã —Å –≤–∞—à–∏–º –Ω–∞–Ω–µ—Å–µ–Ω–∏–µ–º –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ ü§ó"
	addingToCartText = "–û—Ç–ª–∏—á–Ω–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –≤–∞—à —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É!"
	customPrintText  = "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–¥–ø–∏—Å—å –∏–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å —É —Å–µ–±—è –Ω–∞ –∏–∑–¥–µ–ª–∏–∏:"
	emptyCartText    = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ =("
	newNameText      = "–í–≤–µ–¥–∏—Ç–µ –∏–º—è:"
	newAddressText   = "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:"
	newPhoneText     = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
	createOrderText  = "–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ–ø–ª–∞—Ç—ã –£–ö–ê–ñ–ò–¢–ï –í–ê–® –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω —É –≤–∞—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ. –ú—ã –Ω–∞—á–Ω–µ–º –¥–µ–ª–∞—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã –æ–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –Ω–∞ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: 2200 7008 7190 5906"
	selectTypeText   = "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å"
	selectSizeText   = "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä"
	selectColorText  = "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç"
	infoText         = "–°—É–ø–µ—Ä–º–µ–≥–∞–≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–∞ –ø—Ä–æ –Ω–∞—Å"
)

// here is keyboards for bot's messages

func newStartKB() *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ö –ø–æ–∫—É–ø–∫–∞–º!", "start_shopping"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å üë§", "profile"),
			tgbotapi.NewInlineKeyboardButtonData("–ö–æ—Ä–∑–∏–Ω–∞ üõç", "cart"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–û –Ω–∞—Å", "info"),
			tgbotapi.NewInlineKeyboardButtonURL("–ü–æ–¥–¥–µ—Ä–∂–∫–∞", "https://t.me/buguzei"),
		),
	)

	return &kb
}

func newProdNameKB(path string) *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ë—Ä—é–∫–∏ 1990 —Ä—É–±.", fmt.Sprintf("%s/—à—Ç–∞–Ω—ã", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–¢–æ–ª—Å—Ç–æ–≤–∫–∞ 1990 —Ä—É–±.", fmt.Sprintf("%s/—Ç–æ–ª—Å—Ç–æ–≤–∫–∞", path)),
		),
	)

	return &kb
}

func newProdColorKB(path string) *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ë–µ–ª—ã–π", fmt.Sprintf("%s/–±–µ–ª—ã–π", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ß–µ—Ä–Ω—ã–π", fmt.Sprintf("%s/—á–µ—Ä–Ω—ã–π", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–°–∏–Ω–∏–π", fmt.Sprintf("%s/—Å–∏–Ω–∏–π", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–°–µ—Ä—ã–π", fmt.Sprintf("%s/—Å–µ—Ä—ã–π", path)),
		),
	)

	return &kb
}

func newProdSizeKB(path string) *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("XS", fmt.Sprintf("%s/XS", path)),
			tgbotapi.NewInlineKeyboardButtonData("S", fmt.Sprintf("%s/S", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("M", fmt.Sprintf("%s/M", path)),
			tgbotapi.NewInlineKeyboardButtonData("L", fmt.Sprintf("%s/L", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("XL", fmt.Sprintf("%s/XL", path)),
			tgbotapi.NewInlineKeyboardButtonData("XXL", fmt.Sprintf("%s/XXL", path)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("3XL", fmt.Sprintf("%s/3XL", path)),
			tgbotapi.NewInlineKeyboardButtonData("4XL", fmt.Sprintf("%s/4XL", path)),
		),
	)
	return &kb
}

func cartKB(amount int) *tgbotapi.InlineKeyboardMarkup {
	strAmount := strconv.Itoa(amount)

	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("<--", "cart/left"),
			tgbotapi.NewInlineKeyboardButtonData("-", "cart/decrease"),
			tgbotapi.NewInlineKeyboardButtonData(strAmount, " "),
			tgbotapi.NewInlineKeyboardButtonData("+", "cart/increase"),
			tgbotapi.NewInlineKeyboardButtonData("-->", "cart/right"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", "cart/delete_prod"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", "design"),
		),
	)
	return &kb
}

func backToStartKB() *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home"),
		),
	)
	return &kb
}

func backAndStartKB() *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home"),
			tgbotapi.NewInlineKeyboardButtonData("–ö–æ—Ä–∑–∏–Ω–∞ üõç", "cart"),
		),
	)
	return &kb
}

func profileKB() *tgbotapi.InlineKeyboardMarkup {
	kb := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ò–º—è", "profile/name"),
			tgbotapi.NewInlineKeyboardButtonData("–ê–¥—Ä–µ—Å", "profile/address"),
			tgbotapi.NewInlineKeyboardButtonData("–¢–µ–ª–µ—Ñ–æ–Ω", "profile/phone"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ö–æ—Ä–∑–∏–Ω–∞ üõç", "cart"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home"),
		),
	)
	return &kb
}
